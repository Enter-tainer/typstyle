---
source: tests/src/unit.rs
input_file: tests/fixtures/unit/grid/complex.typ
---
// Simple table with header and footer
#table(
  table.header(
    [*Col 1*],
    [*Col 2*],
    [*Col 3*],
  ),
  [A],
  [B],
  [C],
  [1],
  [2],
  [3],
  table.footer(
    [Sum],
    [],
    [100],
  ),
)

// Complex grid with nested content and mixed alignment
#grid(
  columns: (1fr, auto, 2fr),
  rows: (auto, 1.5em, auto),
  gutter: 3pt,
  align(left + top)[Top left], align(center + horizon)[Centered],
  align(right + bottom)[Bottom right],
  grid.cell(colspan: 2)[Spanning content], ..(), align(center)[Normal],
  grid.cell(rowspan: 2)[Tall content],
  [image("test.png")],
  grid(
    columns: 2,
    [Nested], [Grid],
    [With], [Content],
  ),
)

// Table with styling and lines
#table(
  columns: (auto, 1fr, auto),
  inset: 8pt,
  stroke: 0.5pt,
  align: (x, y) => (left, center, right).at(x),
  table.hline(start: 1, end: 3, stroke: blue + 1pt),

  table.vline(start: 0, end: 2, stroke: red + 0.5pt),
  [Regular], table.cell(fill: lime)[Colored],
  table.cell(inset: 12pt)[Padded],
  table.cell(colspan: 3)[Wide spanning content with #box(width: 50%)[constrained box]],
  table.cell(
    fill: rgb("eee"),
    [Nested table: ]
      + table(
        [A],
        [B],
      ),
  ),
)

// Mixed content with rich formatting
#table(
  columns: 3,
  stroke: none,
  [*Bold*], emph[Emphasis], text(blue)[Colored],
  [_Italic_], `code`, $x^2$,
  box(width: 2cm)[Constrained], align(center)[Centered], link("url"),
  [Link],
)

// Table with merged cells and nested tables
#table(
  columns: (auto, 1fr, auto),
  table.cell(colspan: 2, rowspan: 2)[
    #table(
      columns: 2,
      [A1], [B1],
      [A2], table.cell(fill: blue.lighten(80%))[B2],
    )
  ],
  [Side],
  [Bottom],
  table.cell(colspan: 3)[Footer],
)

// Grid with complex layout patterns
#grid(
  columns: (1fr, 1fr, 1fr),
  rows: auto,
  gutter: 5pt,
  align(center + horizon)[First],
  grid.cell(colspan: 2, fill: rgb("eee"), [Long content that spans two columns]),
  grid.cell(rowspan: 2)[
    #align(right)[Side content] \
    With multiple lines
  ],
  grid.cell(colspan: 2, rowspan: 2)[
    #table(
      columns: 2,
      stroke: none,
      [A], [B],
      [C], [D],
    )
  ],
)

// Table with mixed header styles
#table(
  columns: 4,
  stroke: (thickness: 0.5pt, dash: "dashed"),
  align: center + horizon,
  table.header(
    table.cell(colspan: 2)[Group 1],
    table.cell(colspan: 2)[Group 2],
  ),

  grid(
    columns: 2,
    [1], [2],
  ),
  [3],
  table.cell(fill: green.lighten(90%))[4],
  [5],
  table.footer([A], [B], [C], [D]),
)
// ...existing code...

// Nested grids with mixed cell types and styling
#grid(
  columns: (1fr, 1fr),
  rows: (auto, auto),
  gutter: 8pt,
  grid.cell(fill: blue.lighten(95%))[
    #table(
      columns: (auto, 1fr),
      stroke: (left: 2pt, right: none),
      align: (col, row) => (center, left).at(col),
      [A], text(red)[B],
      [C], align(right)[D],
    )
  ],
  grid.cell(fill: red.lighten(95%))[
    #stack(
      dir: ttb,
      spacing: 5pt,
      grid(
        columns: 2,
        [1], [2],
      ),
      align(center)[Middle],
      grid(
        columns: 2,
        [3], [4],
      ),
    )
  ],
  grid.cell(rowspan: 2)[
    #table(
      stroke: none,
      columns: (1fr, 1fr),
      table.header()[Span],
      table.cell(colspan: 2)[
        #align(center)[
          Complex #box(width: 2cm)[
            Nested content
          ]
        ]
      ],
    )
  ],
)

// Table with complex patterns and mixed styling
#table(
  columns: (auto, 1fr, auto),
  inset: (x: 12pt, y: 6pt),
  fill: gradient.linear(..color.map.rainbow.slice(0, 3)),
  stroke: (
    thickness: 0.5pt,
    dash: "dotted",
    paint: blue.darken(20%),
  ),
  table.header(

    table.cell(colspan: 3)[
      #align(center)[
        *Complex Header*
        #box(width: 80%)[With style]
      ]
    ],
  ),
  table.cell(rowspan: 2)[
    #grid(
      columns: 2,
      gutter: 3pt,
      [A], text(red)[B],
      [C], align(right)[D],
    )
  ],
  table.cell(colspan: 2, fill: gradient.radial(blue, red))[
    #align(center)[
      Fancy gradient cell with
      #stack(spacing: 3pt, [Line 1], [Line 2])
    ]
  ],
  table.cell(colspan: 2)[
    #table(
      columns: 2,
      stroke: (thickness: 1pt),
      [Nested], [Table],
      table.cell(fill: yellow.lighten(80%))[
        With
      ],
      [Styling],
    )
  ],
)
