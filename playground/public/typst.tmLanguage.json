{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.typst",
  "name": "typst",
  "patterns": [
    {
      "include": "#shebang"
    },
    {
      "include": "#markup"
    }
  ],
  "repository": {
    "common": {
      "patterns": [
        {
          "include": "#strictComments"
        },
        {
          "include": "#blockRaw"
        },
        {
          "include": "#inlineRaw"
        }
      ]
    },
    "math": {
      "patterns": [
        {
          "include": "#markupEscape"
        },
        {
          "include": "#stringLiteral"
        },
        {
          "include": "#markupEnterCode"
        },
        {
          "begin": "([_^\\/√∛∜])\\s*([\\[\\(\\{⌈⌊⌜⌞❲⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼])",
          "end": "([\\]\\)\\}⌉⌋⌝⌟❳⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽])|(?=\\$)|$",
          "beginCaptures": {
            "1": {
              "name": "punctuation.math.operator.typst"
            },
            "2": {
              "name": "constant.other.symbol.typst"
            }
          },
          "endCaptures": {
            "0": {
              "name": "constant.other.symbol.typst"
            }
          },
          "patterns": [
            {
              "include": "#mathParen"
            },
            {
              "include": "#math"
            }
          ]
        },
        {
          "match": "[_^'&\\/√∛∜]",
          "name": "punctuation.math.operator.typst"
        },
        {
          "include": "#strictMathFuncCallOrPropAccess"
        },
        {
          "include": "#mathPrimary"
        },
        {
          "include": "#mathMoreBrace"
        }
      ]
    },
    "markup": {
      "patterns": [
        {
          "include": "#common"
        },
        {
          "include": "#markupEnterCode"
        },
        {
          "include": "#markupEscape"
        },
        {
          "name": "punctuation.definition.linebreak.typst",
          "match": "\\\\"
        },
        {
          "name": "punctuation.definition.nonbreaking-space.typst",
          "match": "\\~"
        },
        {
          "name": "punctuation.definition.shy.typst",
          "match": "-\\?"
        },
        {
          "name": "punctuation.definition.em-dash.typst",
          "match": "---"
        },
        {
          "name": "punctuation.definition.en-dash.typst",
          "match": "--"
        },
        {
          "name": "punctuation.definition.ellipsis.typst",
          "match": "\\.\\.\\."
        },
        {
          "include": "#markupLink"
        },
        {
          "include": "#markupMath"
        },
        {
          "include": "#markupHeading"
        },
        {
          "name": "punctuation.definition.list.unnumbered.typst",
          "match": "^\\s*-\\s+"
        },
        {
          "name": "punctuation.definition.list.numbered.typst",
          "match": "^\\s*([0-9]+\\.|\\+)\\s+"
        },
        {
          "include": "#markupLabel"
        },
        {
          "include": "#markupReference"
        },
        {
          "include": "#markupBrace"
        }
      ]
    },
    "shebang": {
      "name": "comment.line.shebang.typst",
      "begin": "^(#!)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.line.shebang.typst"
        }
      },
      "end": "\\n"
    },
    "code": {
      "patterns": [
        {
          "include": "#common"
        },
        {
          "include": "#comments"
        },
        {
          "name": "punctuation.terminator.statement.typst",
          "match": ";"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "include": "#blockComment"
        },
        {
          "include": "#lineComment"
        }
      ]
    },
    "codeBlock": {
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.curly.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.brace.curly.typst"
        }
      },
      "patterns": [
        {
          "include": "#code"
        }
      ]
    },
    "codeMath": {
      "name": "markup.math.typst",
      "begin": "(?<![\\)\\]])\\$",
      "end": "\\$",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.math.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.math.typst"
        }
      },
      "patterns": [
        {
          "include": "#math"
        }
      ]
    },
    "contentBlock": {
      "begin": "\\[",
      "end": "\\]",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.square.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.brace.square.typst"
        }
      },
      "patterns": [
        {
          "include": "#contentBlock"
        },
        {
          "include": "#markup"
        }
      ]
    },
    "keywordConstants": {
      "patterns": [
        {
          "name": "keyword.other.none.typst",
          "match": "(?<!\\)|\\]|\\})\\bnone\\b(?!-)"
        },
        {
          "name": "keyword.other.auto.typst",
          "match": "(?<!\\)|\\]|\\})\\bauto\\b(?!-)"
        },
        {
          "name": "constant.language.boolean.typst",
          "match": "(?<!\\)|\\]|\\})\\b(false|true)\\b(?!-)"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.length.typst",
          "match": "(?:\\d+\\.(?!\\d)|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)(?<!\\.)(mm|pt|cm|in|em)($|\\b)"
        },
        {
          "name": "constant.numeric.angle.typst",
          "match": "(?:\\d+\\.(?!\\d)|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)(?<!\\.)(rad|deg)($|\\b)"
        },
        {
          "name": "constant.numeric.percentage.typst",
          "match": "(?:\\d+\\.(?!\\d)|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%"
        },
        {
          "name": "constant.numeric.fr.typst",
          "match": "(?:\\d+\\.(?!\\d)|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)(?<!\\.)fr"
        },
        {
          "name": "constant.numeric.integer.typst",
          "match": "(?<!\\)|\\]|\\})(^|(?<=\\s|#)|\\b)\\d+\\b(?!\\.(?:[^\\p{XID_Start}_]|$)|[eE])"
        },
        {
          "name": "constant.numeric.hex.typst",
          "match": "(?<!\\)|\\]|\\})(^|(?<=\\s|#)|\\b)0x[0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.octal.typst",
          "match": "(?<!\\)|\\]|\\})(^|(?<=\\s|#)|\\b)0o[0-7]+\\b"
        },
        {
          "name": "constant.numeric.binary.typst",
          "match": "(?<!\\)|\\]|\\})(^|(?<=\\s|#)|\\b)0b[01]+\\b"
        },
        {
          "name": "constant.numeric.float.typst",
          "match": "(?:\\d+\\.(?!\\d)|\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)(?:)"
        },
        {
          "include": "#stringLiteral"
        }
      ]
    },
    "primitiveColors": {
      "match": "\\b(red|blue|green|black|white|gray|silver|eastern|navy|aqua|teal|purple|fuchsia|maroon|orange|yellow|olive|lime|ltr|rtl|ttb|btt|start|left|center|right|end|top|horizon|bottom)\\b(?!-)",
      "name": "variable.other.constant.builtin.typst"
    },
    "primitiveFunctions": {
      "match": "\\b(?:luma|oklab|oklch|rgb|cmyk|range)\\b(?!-)",
      "name": "support.function.builtin.typst"
    },
    "primitiveTypes": {
      "match": "\\b(any|str|int|float|bool|type|length|content|array|dictionary|arguments)\\b(?!-)",
      "name": "entity.name.type.primitive.typst"
    },
    "identifier": {
      "match": "(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*",
      "name": "variable.other.readwrite.typst"
    },
    "paramOrArgName": {
      "match": "(?!(show|import|include)\\s*\\:)((?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*)\\s*(\\:)",
      "captures": {
        "2": {
          "name": "variable.other.readwrite.typst"
        },
        "3": {
          "name": "punctuation.separator.colon.typst"
        }
      }
    },
    "stringLiteral": {
      "name": "string.quoted.double.typst",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.typst"
        }
      },
      "patterns": [
        {
          "match": "(\\\\(?:[^u]|u\\{?[0-9a-zA-Z]*\\}?))|[^\\\\\"]+",
          "captures": {
            "1": {
              "name": "constant.character.escape.string.typst"
            }
          }
        }
      ]
    },
    "strictComments": {
      "patterns": [
        {
          "include": "#blockComment"
        },
        {
          "include": "#strictLineComment"
        }
      ]
    },
    "blockComment": {
      "name": "comment.block.typst",
      "begin": "\\/\\*",
      "end": "\\*\\/",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.typst"
        }
      },
      "patterns": [
        {
          "include": "#blockComment"
        }
      ]
    },
    "lineComment": {
      "name": "comment.line.double-slash.typst",
      "begin": "\\/\\/",
      "end": "(?=$|\\n)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.typst"
        }
      }
    },
    "strictLineComment": {
      "name": "comment.line.double-slash.typst",
      "begin": "(?<!:)\\/\\/",
      "end": "(?=$|\\n)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.typst"
        }
      }
    },
    "mathIdentifier": {
      "match": "(?:(?<=_)|\\b)(?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])+",
      "name": "variable.other.readwrite.typst"
    },
    "mathBrace": {
      "name": "markup.content.brace.typst",
      "match": "[{}]"
    },
    "mathParen": {
      "begin": "[\\[\\(\\{⌈⌊⌜⌞❲⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼]",
      "end": "([\\]\\)\\}⌉⌋⌝⌟❳⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽])|(?=\\$)|$",
      "beginCaptures": {
        "0": {
          "name": "markup.content.brace.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "markup.content.brace.typst"
        }
      },
      "patterns": [
        {
          "include": "#mathParen"
        },
        {
          "include": "#math"
        }
      ]
    },
    "mathPrimary": {
      "begin": "(?:(?<=_)|\\b)(?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])+",
      "beginCaptures": {
        "0": {
          "name": "variable.other.readwrite.typst"
        }
      },
      "end": "(?!(?:\\(|\\.[\\p{XID_Start}]))|(?=\\$)",
      "patterns": [
        {
          "include": "#strictMathFuncCallOrPropAccess"
        },
        {
          "match": "(\\.)((?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])*)",
          "captures": {
            "1": {
              "name": "keyword.operator.accessor.typst"
            },
            "2": {
              "name": "variable.other.readwrite.typst"
            }
          }
        },
        {
          "include": "#mathCallArgs"
        },
        {
          "include": "#mathIdentifier"
        }
      ]
    },
    "mathMoreBrace": {
      "name": "markup.content.brace.typst",
      "match": "[{}()\\[\\]]"
    },
    "mathCallArgs": {
      "begin": "\\(",
      "end": "\\)|(?=\\$)",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#mathParen"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.typst"
        },
        {
          "include": "#math"
        }
      ]
    },
    "strictMathFuncCallOrPropAccess": {
      "name": "meta.expr.call.typst",
      "begin": "(?=(?:(?:(\\.)((?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])*)|(?:(?<=_)|\\b)(?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])+)(?=\\()))",
      "end": "(?:(?<=[\\)])(?![\\(\\.]|(?:(?<=_)|\\b)(?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])+(?=\\()))|(?=[\\$\\s;,\\}\\]\\)]|$)",
      "patterns": [
        {
          "match": "\\.",
          "name": "keyword.operator.accessor.typst"
        },
        {
          "match": "(?:(?<=_)|\\b)(?:(?!_)[\\p{XID_Start}])(?:(?!_)[\\p{XID_Continue}])+(?=\\()",
          "name": "entity.name.function.typst",
          "captures": {
            "0": {
              "name": "entity.name.function.typst",
              "patterns": [
                {
                  "include": "#primitiveFunctions"
                },
                {
                  "include": "#primitiveTypes"
                },
                {
                  "match": ".*",
                  "name": "entity.name.function.typst"
                }
              ]
            }
          }
        },
        {
          "include": "#mathIdentifier"
        },
        {
          "match": "(\\()\\s*(\\))",
          "captures": {
            "1": {
              "name": "meta.brace.round.typst"
            },
            "2": {
              "name": "meta.brace.round.typst"
            }
          }
        },
        {
          "include": "#mathCallArgs"
        }
      ]
    },
    "markupBrace": {
      "name": "markup.content.brace.typst",
      "match": "[{}()\\[\\]]"
    },
    "markupMath": {
      "name": "markup.math.typst",
      "begin": "\\$",
      "end": "\\$",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.math.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.math.typst"
        }
      },
      "patterns": [
        {
          "include": "#math"
        }
      ]
    },
    "markupLabel": {
      "name": "string.other.label.typst",
      "match": "<[\\p{XID_Start}_][\\p{XID_Continue}_\\-\\.:]*>"
    },
    "markupReference": {
      "name": "string.other.reference.typst",
      "match": "(@)[\\p{XID_Start}_](?:[\\p{XID_Continue}_\\-]|[\\.:](?!:\\s|$|([\\.:]*[^\\p{XID_Continue}_\\-\\.:])))*",
      "captures": {
        "1": {
          "name": "punctuation.definition.reference.typst"
        }
      }
    },
    "markupEscape": {
      "name": "constant.character.escape.content.typst",
      "match": "\\\\(?:[^u]|u\\{?[0-9a-zA-Z]*\\}?)"
    },
    "markupHeading": {
      "name": "markup.heading.typst",
      "begin": "^\\s*(=+)(?:(?=[\\r\\n]|$)|[^\\S\\n]+)",
      "end": "\\n|(?=<)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.heading.typst"
        }
      },
      "patterns": [
        {
          "include": "#markup"
        }
      ]
    },
    "markupEnterCode": {
      "patterns": [
        {
          "match": "(#)\\s",
          "captures": {
            "1": {
              "name": "punctuation.definition.hash.typst"
            }
          }
        },
        {
          "match": "(#)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.hash.typst"
            },
            "2": {
              "name": "punctuation.terminator.statement.typst"
            }
          }
        },
        {
          "begin": "#(?=(?:break|continue|and|or|not|return|as|in|include|import|let|else|if|for|while|context|set|show)\\b(?!-))",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=(?:any|str|int|float|bool|type|length|content|array|dictionary|arguments)\\b(?!-))",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "entity.name.type.primitive.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=(?:none)\\b(?!-))",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "keyword.other.none.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=(?:false|true)\\b(?!-))",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "constant.language.boolean.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*[\\(\\[])",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=[\\p{XID_Start}_])",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "variable.other.readwrite.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=\\\")",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "string.hash.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?=\\d|\\.\\d)",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "constant.numeric.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "#(?:)",
          "end": "(?<=;)|(?<=[\\}\\]\\)])(?![;\\(\\[\\$]|(?:\\.(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=[\\(\\[])))|(?<!#)(?=[\"\\_\\{])|(?<![#\\]\\}\\]])(?=\\[)|(?=\\.(?:[^0-9\\p{XID_Start}_]|$))|(?=[\\s,\\}\\]\\)\\#\\$\\+\\-\\*\\/\\=]|$)|(;)",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.hash.typst"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.terminator.statement.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "markupBold": {
      "name": "markup.bold.typst",
      "begin": "(?:(^\\*|\\*$|((?<=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}])\\*)|(\\*(?=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}]))))",
      "end": "(?:(^\\*|\\*$|((?<=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}])\\*)|(\\*(?=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}]))))|\\n|(?=\\])",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.bold.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.bold.typst"
        }
      },
      "patterns": [
        {
          "include": "#markup"
        }
      ]
    },
    "markupLink": {
      "name": "markup.underline.link.typst",
      "begin": "(?:https?):\\/\\/",
      "end": "(?=[\\s\\]\\)]|(?=[!,.:;?'](?:[\\s\\]\\)]|$)))",
      "patterns": [
        {
          "include": "#markupLinkParen"
        },
        {
          "include": "#markupLinkBracket"
        },
        {
          "match": "(^|\\G)(?:[0-9a-zA-Z#$%&*\\+\\-\\/\\=\\@\\_\\~]+|(?:[!,.:;?']+(?![\\s\\]\\)]|$)))"
        }
      ]
    },
    "markupLinkParen": {
      "begin": "\\(",
      "end": "\\)|(?=[\\s\\]])",
      "patterns": [
        {
          "include": "#markupLink"
        }
      ]
    },
    "markupLinkBracket": {
      "begin": "\\[",
      "end": "\\]|(?=[\\s\\)])",
      "patterns": [
        {
          "include": "#markupLink"
        }
      ]
    },
    "markupItalic": {
      "name": "markup.italic.typst",
      "begin": "(?:(^_|_$|((?<=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}])_)|(_(?=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}]))))",
      "end": "(?:(^_|_$|((?<=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}])_)|(_(?=[\\W\\p{Han}\\p{Hangul}\\p{Katakana}\\p{Hiragana}]))))|\\n|(?=\\])",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.italic.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.italic.typst"
        }
      },
      "patterns": [
        {
          "include": "#markup"
        }
      ]
    },
    "inlineRaw": {
      "name": "markup.raw.inline.typst string.other.raw.typst",
      "begin": "`",
      "end": "`",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.raw.inline.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.raw.inline.typst"
        }
      }
    },
    "blockRaw": {
      "patterns": [
        {
          "include": "#batchfile"
        },
        {
          "include": "#bibtex"
        },
        {
          "include": "#c"
        },
        {
          "include": "#clojure"
        },
        {
          "include": "#coffee"
        },
        {
          "include": "#cpp"
        },
        {
          "include": "#css"
        },
        {
          "include": "#cs"
        },
        {
          "include": "#dart"
        },
        {
          "include": "#diff"
        },
        {
          "include": "#dockerfile"
        },
        {
          "include": "#elixir"
        },
        {
          "include": "#erlang"
        },
        {
          "include": "#fs"
        },
        {
          "include": "#git-commit"
        },
        {
          "include": "#git-rebase"
        },
        {
          "include": "#go"
        },
        {
          "include": "#groovy"
        },
        {
          "include": "#handlebars"
        },
        {
          "include": "#html"
        },
        {
          "include": "#ini"
        },
        {
          "include": "#java"
        },
        {
          "include": "#js"
        },
        {
          "include": "#jsonc"
        },
        {
          "include": "#json"
        },
        {
          "include": "#julia"
        },
        {
          "include": "#latex"
        },
        {
          "include": "#less"
        },
        {
          "include": "#log"
        },
        {
          "include": "#lua"
        },
        {
          "include": "#makefile"
        },
        {
          "include": "#markdown"
        },
        {
          "include": "#objc"
        },
        {
          "include": "#perl"
        },
        {
          "include": "#perl6"
        },
        {
          "include": "#php"
        },
        {
          "include": "#powershell"
        },
        {
          "include": "#pug"
        },
        {
          "include": "#r"
        },
        {
          "include": "#regexp"
        },
        {
          "include": "#re"
        },
        {
          "include": "#ruby"
        },
        {
          "include": "#scss"
        },
        {
          "include": "#sql"
        },
        {
          "include": "#swift"
        },
        {
          "include": "#typst"
        },
        {
          "include": "#typst-code"
        },
        {
          "include": "#xml"
        },
        {
          "include": "#xsl"
        },
        {
          "include": "#yaml"
        },
        {
          "include": "#python"
        },
        {
          "include": "#rust"
        },
        {
          "include": "#scala"
        },
        {
          "include": "#shell"
        },
        {
          "include": "#ts"
        },
        {
          "include": "#tsx"
        },
        {
          "include": "#twig"
        },
        {
          "include": "#vb"
        },
        {
          "include": "#blockRawGeneral"
        }
      ]
    },
    "batchfile": {
      "lang": "batchfile",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(batchfile|bat|batch)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.batchfile",
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(batchfile|bat|batch)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.batchfile",
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(batchfile|bat|batch)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.batchfile",
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(batchfile|bat|batch)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.batchfile",
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(batchfile|bat|batch)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.batchfile",
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            }
          ]
        }
      ]
    },
    "bibtex": {
      "lang": "bibtex",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(bibtex)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.bibtex",
              "patterns": [
                {
                  "include": "source.bibtex"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(bibtex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.bibtex",
              "patterns": [
                {
                  "include": "source.bibtex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(bibtex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.bibtex",
              "patterns": [
                {
                  "include": "source.bibtex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(bibtex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.bibtex",
              "patterns": [
                {
                  "include": "source.bibtex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(bibtex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.bibtex",
              "patterns": [
                {
                  "include": "source.bibtex"
                }
              ]
            }
          ]
        }
      ]
    },
    "c": {
      "lang": "c",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(c|h)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(c|h)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(c|h)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(c|h)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(c|h)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.c",
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          ]
        }
      ]
    },
    "clojure": {
      "lang": "clojure",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(clojure|clj|cljs)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(clojure|clj|cljs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(clojure|clj|cljs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(clojure|clj|cljs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(clojure|clj|cljs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.clojure",
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          ]
        }
      ]
    },
    "coffee": {
      "lang": "coffee",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(coffee|Cakefile|coffee\\.erb)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(coffee|Cakefile|coffee\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(coffee|Cakefile|coffee\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(coffee|Cakefile|coffee\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(coffee|Cakefile|coffee\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.coffee",
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          ]
        }
      ]
    },
    "cpp": {
      "lang": "cpp",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(cpp|c\\+\\+|cxx)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(cpp|c\\+\\+|cxx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(cpp|c\\+\\+|cxx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(cpp|c\\+\\+|cxx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(cpp|c\\+\\+|cxx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.cpp",
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          ]
        }
      ]
    },
    "css": {
      "lang": "css",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(css|css\\.erb)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(css|css\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(css|css\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(css|css\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(css|css\\.erb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.css",
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          ]
        }
      ]
    },
    "cs": {
      "lang": "cs",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(cs|csharp|c#)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(cs|csharp|c#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(cs|csharp|c#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(cs|csharp|c#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(cs|csharp|c#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.cs",
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          ]
        }
      ]
    },
    "dart": {
      "lang": "dart",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(dart)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(dart)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(dart)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(dart)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(dart)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.dart",
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          ]
        }
      ]
    },
    "diff": {
      "lang": "diff",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(diff|patch|rej)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(diff|patch|rej)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(diff|patch|rej)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(diff|patch|rej)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(diff|patch|rej)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.diff",
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          ]
        }
      ]
    },
    "dockerfile": {
      "lang": "dockerfile",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(dockerfile|Dockerfile)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(dockerfile|Dockerfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(dockerfile|Dockerfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(dockerfile|Dockerfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(dockerfile|Dockerfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.dockerfile",
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          ]
        }
      ]
    },
    "elixir": {
      "lang": "elixir",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(elixir)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(elixir)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(elixir)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(elixir)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(elixir)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.elixir",
              "patterns": [
                {
                  "include": "source.elixir"
                }
              ]
            }
          ]
        }
      ]
    },
    "erlang": {
      "lang": "erlang",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(erlang)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(erlang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(erlang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(erlang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(erlang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.erlang",
              "patterns": [
                {
                  "include": "source.erlang"
                }
              ]
            }
          ]
        }
      ]
    },
    "fs": {
      "lang": "fs",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(fs|fsharp|f#)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(fs|fsharp|f#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(fs|fsharp|f#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(fs|fsharp|f#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(fs|fsharp|f#)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.fs",
              "patterns": [
                {
                  "include": "source.fs"
                }
              ]
            }
          ]
        }
      ]
    },
    "git-commit": {
      "lang": "git-commit",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(git-commit|COMMIT_EDITMSG|MERGE_MSG)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.git-commit",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(git-commit|COMMIT_EDITMSG|MERGE_MSG)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.git-commit",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(git-commit|COMMIT_EDITMSG|MERGE_MSG)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.git-commit",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(git-commit|COMMIT_EDITMSG|MERGE_MSG)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.git-commit",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(git-commit|COMMIT_EDITMSG|MERGE_MSG)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.git-commit",
              "patterns": [
                {
                  "include": "text.git-commit"
                }
              ]
            }
          ]
        }
      ]
    },
    "git-rebase": {
      "lang": "git-rebase",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(git-rebase|git-rebase-todo)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.git-rebase",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(git-rebase|git-rebase-todo)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.git-rebase",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(git-rebase|git-rebase-todo)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.git-rebase",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(git-rebase|git-rebase-todo)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.git-rebase",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(git-rebase|git-rebase-todo)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.git-rebase",
              "patterns": [
                {
                  "include": "text.git-rebase"
                }
              ]
            }
          ]
        }
      ]
    },
    "go": {
      "lang": "go",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(go|golang)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(go|golang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(go|golang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(go|golang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(go|golang)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.go",
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          ]
        }
      ]
    },
    "groovy": {
      "lang": "groovy",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(groovy|gvy)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(groovy|gvy)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(groovy|gvy)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(groovy|gvy)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(groovy|gvy)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.groovy",
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          ]
        }
      ]
    },
    "handlebars": {
      "lang": "handlebars",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(handlebars|hbs)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.handlebars",
              "patterns": [
                {
                  "include": "text.html.handlebars"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(handlebars|hbs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.handlebars",
              "patterns": [
                {
                  "include": "text.html.handlebars"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(handlebars|hbs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.handlebars",
              "patterns": [
                {
                  "include": "text.html.handlebars"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(handlebars|hbs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.handlebars",
              "patterns": [
                {
                  "include": "text.html.handlebars"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(handlebars|hbs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.handlebars",
              "patterns": [
                {
                  "include": "text.html.handlebars"
                }
              ]
            }
          ]
        }
      ]
    },
    "html": {
      "lang": "html",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(html|htm|shtml|xhtml|inc|tmpl|tpl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.html",
              "patterns": [
                {
                  "include": "text.html.basic"
                }
              ]
            }
          ]
        }
      ]
    },
    "ini": {
      "lang": "ini",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(ini|conf)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(ini|conf)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(ini|conf)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(ini|conf)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(ini|conf)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.ini",
              "patterns": [
                {
                  "include": "source.ini"
                }
              ]
            }
          ]
        }
      ]
    },
    "java": {
      "lang": "java",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(java|bsh)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(java|bsh)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(java|bsh)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(java|bsh)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(java|bsh)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.java",
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          ]
        }
      ]
    },
    "js": {
      "lang": "js",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(js|jsx|javascript|es6|mjs|cjs|dataviewjs)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(js|jsx|javascript|es6|mjs|cjs|dataviewjs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(js|jsx|javascript|es6|mjs|cjs|dataviewjs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(js|jsx|javascript|es6|mjs|cjs|dataviewjs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(js|jsx|javascript|es6|mjs|cjs|dataviewjs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.js",
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          ]
        }
      ]
    },
    "jsonc": {
      "lang": "jsonc",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(jsonc)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.jsonc",
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(jsonc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.jsonc",
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(jsonc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.jsonc",
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(jsonc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.jsonc",
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(jsonc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.jsonc",
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            }
          ]
        }
      ]
    },
    "json": {
      "lang": "json",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.json",
              "patterns": [
                {
                  "include": "source.json"
                }
              ]
            }
          ]
        }
      ]
    },
    "julia": {
      "lang": "julia",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(julia)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.julia",
              "patterns": [
                {
                  "include": "source.julia"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(julia)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.julia",
              "patterns": [
                {
                  "include": "source.julia"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(julia)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.julia",
              "patterns": [
                {
                  "include": "source.julia"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(julia)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.julia",
              "patterns": [
                {
                  "include": "source.julia"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(julia)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.julia",
              "patterns": [
                {
                  "include": "source.julia"
                }
              ]
            }
          ]
        }
      ]
    },
    "latex": {
      "lang": "latex",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(latex|tex)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(latex|tex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(latex|tex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(latex|tex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(latex|tex)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.latex",
              "patterns": [
                {
                  "include": "text.tex.latex"
                }
              ]
            }
          ]
        }
      ]
    },
    "less": {
      "lang": "less",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(less)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(less)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(less)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(less)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(less)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.less",
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          ]
        }
      ]
    },
    "log": {
      "lang": "log",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(log)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.log",
              "patterns": [
                {
                  "include": "text.log"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(log)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.log",
              "patterns": [
                {
                  "include": "text.log"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(log)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.log",
              "patterns": [
                {
                  "include": "text.log"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(log)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.log",
              "patterns": [
                {
                  "include": "text.log"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(log)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.log",
              "patterns": [
                {
                  "include": "text.log"
                }
              ]
            }
          ]
        }
      ]
    },
    "lua": {
      "lang": "lua",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(lua)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(lua)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(lua)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(lua)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(lua)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.lua",
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          ]
        }
      ]
    },
    "makefile": {
      "lang": "makefile",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(makefile|makefile|GNUmakefile|OCamlMakefile)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(makefile|makefile|GNUmakefile|OCamlMakefile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(makefile|makefile|GNUmakefile|OCamlMakefile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(makefile|makefile|GNUmakefile|OCamlMakefile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(makefile|makefile|GNUmakefile|OCamlMakefile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.makefile",
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          ]
        }
      ]
    },
    "markdown": {
      "lang": "markdown",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(markdown|md)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(markdown|md)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(markdown|md)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(markdown|md)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(markdown|md)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.markdown",
              "patterns": [
                {
                  "include": "text.html.markdown"
                }
              ]
            }
          ]
        }
      ]
    },
    "objc": {
      "lang": "objc",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(objc|objective-c|mm|obj-c|m)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(objc|objective-c|mm|obj-c|m)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(objc|objective-c|mm|obj-c|m)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(objc|objective-c|mm|obj-c|m)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(objc|objective-c|mm|obj-c|m)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.objc",
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          ]
        }
      ]
    },
    "perl": {
      "lang": "perl",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(perl|pl|pm|pod|t|PL|psgi|vcl)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(perl|pl|pm|pod|t|PL|psgi|vcl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(perl|pl|pm|pod|t|PL|psgi|vcl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(perl|pl|pm|pod|t|PL|psgi|vcl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(perl|pl|pm|pod|t|PL|psgi|vcl)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.perl",
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          ]
        }
      ]
    },
    "perl6": {
      "lang": "perl6",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(perl6|p6|pl6|pm6|nqp)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.perl6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(perl6|p6|pl6|pm6|nqp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.perl6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(perl6|p6|pl6|pm6|nqp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.perl6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(perl6|p6|pl6|pm6|nqp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.perl6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(perl6|p6|pl6|pm6|nqp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.perl6",
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          ]
        }
      ]
    },
    "php": {
      "lang": "php",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(php|php|php3|php4|php5|phtml|aw|ctp)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "text.html.basic"
                },
                {
                  "include": "source.php"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(php|php|php3|php4|php5|phtml|aw|ctp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "text.html.basic"
                },
                {
                  "include": "source.php"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(php|php|php3|php4|php5|phtml|aw|ctp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "text.html.basic"
                },
                {
                  "include": "source.php"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(php|php|php3|php4|php5|phtml|aw|ctp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "text.html.basic"
                },
                {
                  "include": "source.php"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(php|php|php3|php4|php5|phtml|aw|ctp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.php",
              "patterns": [
                {
                  "include": "text.html.basic"
                },
                {
                  "include": "source.php"
                }
              ]
            }
          ]
        }
      ]
    },
    "powershell": {
      "lang": "powershell",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(powershell|ps1|psm1|psd1)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.powershell",
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(powershell|ps1|psm1|psd1)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.powershell",
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(powershell|ps1|psm1|psd1)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.powershell",
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(powershell|ps1|psm1|psd1)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.powershell",
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(powershell|ps1|psm1|psd1)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.powershell",
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            }
          ]
        }
      ]
    },
    "pug": {
      "lang": "pug",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(pug|jade)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "text.pug"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(pug|jade)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "text.pug"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(pug|jade)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "text.pug"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(pug|jade)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "text.pug"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(pug|jade)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.pug",
              "patterns": [
                {
                  "include": "text.pug"
                }
              ]
            }
          ]
        }
      ]
    },
    "r": {
      "lang": "r",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(r|R|r|s|S|Rprofile)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(r|R|r|s|S|Rprofile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(r|R|r|s|S|Rprofile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(r|R|r|s|S|Rprofile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(r|R|r|s|S|Rprofile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.r",
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          ]
        }
      ]
    },
    "regexp": {
      "lang": "regexp",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(regexp)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(regexp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(regexp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(regexp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(regexp)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.regexp",
              "patterns": [
                {
                  "include": "source.js.regexp"
                }
              ]
            }
          ]
        }
      ]
    },
    "re": {
      "lang": "re",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(re)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.re",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(re)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.re",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(re)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.re",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(re)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.re",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(re)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.re",
              "patterns": [
                {
                  "include": "source.regexp.python"
                }
              ]
            }
          ]
        }
      ]
    },
    "ruby": {
      "lang": "ruby",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile\\.lock|Thorfile|Puppetfile)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile\\.lock|Thorfile|Puppetfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile\\.lock|Thorfile|Puppetfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile\\.lock|Thorfile|Puppetfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile\\.lock|Thorfile|Puppetfile)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.ruby",
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          ]
        }
      ]
    },
    "scss": {
      "lang": "scss",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(scss)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(scss)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(scss)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(scss)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(scss)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.scss",
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          ]
        }
      ]
    },
    "sql": {
      "lang": "sql",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(sql|ddl|dml)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(sql|ddl|dml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(sql|ddl|dml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(sql|ddl|dml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(sql|ddl|dml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.sql",
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          ]
        }
      ]
    },
    "swift": {
      "lang": "swift",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(swift)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.swift",
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(swift)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.swift",
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(swift)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.swift",
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(swift)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.swift",
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(swift)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.swift",
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            }
          ]
        }
      ]
    },
    "typst": {
      "lang": "typst",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(typst|typ)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.typst",
              "patterns": [
                {
                  "include": "source.typst"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(typst|typ)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.typst",
              "patterns": [
                {
                  "include": "source.typst"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(typst|typ)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.typst",
              "patterns": [
                {
                  "include": "source.typst"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(typst|typ)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.typst",
              "patterns": [
                {
                  "include": "source.typst"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(typst|typ)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.typst",
              "patterns": [
                {
                  "include": "source.typst"
                }
              ]
            }
          ]
        }
      ]
    },
    "typst-code": {
      "lang": "typst-code",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(typst-code|typc)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.typst-code",
              "patterns": [
                {
                  "include": "source.typst-code"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(typst-code|typc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.typst-code",
              "patterns": [
                {
                  "include": "source.typst-code"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(typst-code|typc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.typst-code",
              "patterns": [
                {
                  "include": "source.typst-code"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(typst-code|typc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.typst-code",
              "patterns": [
                {
                  "include": "source.typst-code"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(typst-code|typc)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.typst-code",
              "patterns": [
                {
                  "include": "source.typst-code"
                }
              ]
            }
          ]
        }
      ]
    },
    "xml": {
      "lang": "xml",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.xml",
              "patterns": [
                {
                  "include": "text.xml"
                }
              ]
            }
          ]
        }
      ]
    },
    "xsl": {
      "lang": "xsl",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(xsl|xslt)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(xsl|xslt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(xsl|xslt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(xsl|xslt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(xsl|xslt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.xsl",
              "patterns": [
                {
                  "include": "text.xml.xsl"
                }
              ]
            }
          ]
        }
      ]
    },
    "yaml": {
      "lang": "yaml",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(yaml|yml)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(yaml|yml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(yaml|yml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(yaml|yml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(yaml|yml)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.yaml",
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          ]
        }
      ]
    },
    "python": {
      "lang": "python",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.python",
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          ]
        }
      ]
    },
    "rust": {
      "lang": "rust",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(rust|rs)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(rust|rs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(rust|rs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(rust|rs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(rust|rs)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.rust",
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          ]
        }
      ]
    },
    "scala": {
      "lang": "scala",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(scala|sbt)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(scala|sbt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(scala|sbt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(scala|sbt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(scala|sbt)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.scala",
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          ]
        }
      ]
    },
    "shell": {
      "lang": "shell",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|\\.textmate_init)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|\\.textmate_init)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|\\.textmate_init)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|\\.textmate_init)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|\\.textmate_init)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.shell",
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          ]
        }
      ]
    },
    "ts": {
      "lang": "ts",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(ts|typescript)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(ts|typescript)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(ts|typescript)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(ts|typescript)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(ts|typescript)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.ts",
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          ]
        }
      ]
    },
    "tsx": {
      "lang": "tsx",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(tsx)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(tsx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(tsx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(tsx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(tsx)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.tsx",
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          ]
        }
      ]
    },
    "twig": {
      "lang": "twig",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(twig)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.twig",
              "patterns": [
                {
                  "include": "source.twig"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(twig)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.twig",
              "patterns": [
                {
                  "include": "source.twig"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(twig)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.twig",
              "patterns": [
                {
                  "include": "source.twig"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(twig)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.twig",
              "patterns": [
                {
                  "include": "source.twig"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(twig)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.twig",
              "patterns": [
                {
                  "include": "source.twig"
                }
              ]
            }
          ]
        }
      ]
    },
    "vb": {
      "lang": "vb",
      "patterns": [
        {
          "name": "markup.raw.block.typst",
          "match": "(`{3,})(vb)\\b(.*?)(\\1)",
          "captures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            },
            "3": {
              "name": "meta.embedded.block.vb",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            },
            "4": {
              "name": "punctuation.definition.raw.end.typst"
            }
          }
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{6})(vb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{6,}\\s*)",
              "contentName": "meta.embedded.block.vb",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{5})(vb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{5,}\\s*)",
              "contentName": "meta.embedded.block.vb",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{4})(vb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{4,}\\s*)",
              "contentName": "meta.embedded.block.vb",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            }
          ]
        },
        {
          "name": "markup.raw.block.typst",
          "begin": "(`{3})(vb)\\b",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.raw.begin.typst"
            },
            "2": {
              "name": "fenced_code.block.language.typst"
            }
          },
          "end": "\\s*(\\1)",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.raw.end.typst"
            }
          },
          "patterns": [
            {
              "begin": "(^|\\G)(\\s*)",
              "while": "(^|\\G)(?!\\s*`{3,}\\s*)",
              "contentName": "meta.embedded.block.vb",
              "patterns": [
                {
                  "include": "source.asp.vb.net"
                }
              ]
            }
          ]
        }
      ]
    },
    "blockRawGeneral": {
      "name": "markup.raw.block.typst",
      "begin": "(`{3,})([\\p{XID_Start}_][\\p{XID_Continue}_\\-]*\\b)?",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.raw.begin.typst"
        },
        "2": {
          "name": "fenced_code.block.language.typst"
        }
      },
      "end": "(\\1)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.raw.end.typst"
        }
      }
    },
    "expression": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#arrayOrDict"
        },
        {
          "include": "#contentBlock"
        },
        {
          "match": "\\b(else)\\b(?!-)",
          "name": "keyword.control.conditional.typst"
        },
        {
          "match": "\\b(break|continue)\\b(?!-)",
          "name": "keyword.control.loop.typst"
        },
        {
          "match": "\\b(in)\\b(?!-)",
          "name": "keyword.other.range.typst"
        },
        {
          "match": "\\b(and|or|not)\\b(?!-)",
          "name": "keyword.other.logical.typst"
        },
        {
          "match": "\\b(return)\\b(?!-)",
          "name": "keyword.control.flow.typst"
        },
        {
          "include": "#markupLabel"
        },
        {
          "include": "#blockRaw"
        },
        {
          "include": "#inlineRaw"
        },
        {
          "include": "#codeBlock"
        },
        {
          "include": "#letStatement"
        },
        {
          "include": "#showStatement"
        },
        {
          "include": "#contextStatement"
        },
        {
          "include": "#setStatement"
        },
        {
          "include": "#forStatement"
        },
        {
          "include": "#whileStatement"
        },
        {
          "include": "#ifStatement"
        },
        {
          "include": "#importStatement"
        },
        {
          "include": "#includeStatement"
        },
        {
          "include": "#strictFuncCallOrPropAccess"
        },
        {
          "include": "#primitiveColors"
        },
        {
          "include": "#primitiveFunctions"
        },
        {
          "include": "#primitiveTypes"
        },
        {
          "include": "#keywordConstants"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#codeMath"
        },
        {
          "match": "(as)\\b(?!-)",
          "name": "keyword.control.typst"
        },
        {
          "match": "(in)\\b(?!-)",
          "name": "keyword.operator.range.typst"
        },
        {
          "match": "\\.\\.",
          "name": "keyword.operator.spread.typst"
        },
        {
          "match": ":",
          "name": "punctuation.separator.colon.typst"
        },
        {
          "match": "\\.",
          "name": "keyword.operator.accessor.typst"
        },
        {
          "match": ",",
          "name": "punctuation.separator.comma.typst"
        },
        {
          "match": "=>",
          "name": "storage.type.function.arrow.typst"
        },
        {
          "match": "==|!=|<=|<|>=|>",
          "name": "keyword.operator.relational.typst"
        },
        {
          "begin": "(\\+=|-=|\\*=|\\/=|=)",
          "end": "(?=[\\n;\\}\\]\\)])",
          "beginCaptures": {
            "1": {
              "name": "keyword.operator.assignment.typst"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "match": "\\+|\\\\|\\/|\\*|-",
          "name": "keyword.operator.arithmetic.typst"
        }
      ]
    },
    "arrayOrDict": {
      "patterns": [
        {
          "match": "(\\()\\s*(\\))",
          "captures": {
            "1": {
              "name": "meta.brace.round.typst"
            },
            "2": {
              "name": "meta.brace.round.typst"
            }
          }
        },
        {
          "match": "(\\()\\s*(:)\\s*(\\))",
          "captures": {
            "1": {
              "name": "meta.brace.round.typst"
            },
            "2": {
              "name": "punctuation.separator.colon.typst"
            },
            "3": {
              "name": "meta.brace.round.typst"
            }
          }
        },
        {
          "begin": "\\(",
          "end": "\\)|(?=[;\\}\\]])",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.round.typst"
            }
          },
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.typst"
            }
          },
          "patterns": [
            {
              "include": "#literalContent"
            }
          ]
        }
      ]
    },
    "literalContent": {
      "patterns": [
        {
          "include": "#paramOrArgName"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "contextStatement": {
      "name": "meta.expr.context.typst",
      "begin": "\\bcontext\\b(?!-)",
      "end": "(?<=[\\}\\]])|(?<!\\bcontext\\s*)(?=[\\{\\[])|(?=[$;\\}\\]\\)#\\n]|$)",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.other.typst"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "includeStatement": {
      "name": "meta.expr.include.typst",
      "begin": "(\\binclude\\b(?!-))\\s*",
      "end": "(?=[\\n;\\}\\]\\)])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.import.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "importStatement": {
      "name": "meta.expr.import.typst",
      "begin": "(\\bimport\\b(?!-))\\s*",
      "end": "(?=[\\n;\\}\\]\\)])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.import.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#importPathClause"
        },
        {
          "match": "\\:",
          "name": "punctuation.separator.colon.typst"
        },
        {
          "match": "\\*",
          "name": "keyword.operator.wildcard.typst"
        },
        {
          "match": "\\,",
          "name": "punctuation.separator.comma.typst"
        },
        {
          "include": "#importAsClause"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "importPathClause": {
      "begin": "(\\bimport\\b(?!-))\\s*",
      "end": "(?=\\:|as)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.import.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "importAsClause": {
      "begin": "(\\bas\\b)\\s*",
      "end": "(?=[\\s;\\}\\]\\)\\:])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.import.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "letStatement": {
      "name": "meta.expr.let.typst",
      "begin": "(?=(?:(let\\b(?!-))))",
      "end": "(?!\\=)(?=[\\s;\\}\\]\\)])",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#letBindingClause"
        },
        {
          "include": "#letInitClause"
        }
      ]
    },
    "letBindingClause": {
      "begin": "(let\\b(?!-))\\s*",
      "end": "(?=[=;\\]}\\n])",
      "beginCaptures": {
        "1": {
          "name": "storage.type.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "begin": "(\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*)(\\()",
          "end": "\\)|(?=[;\\}\\]])",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.typst",
              "patterns": [
                {
                  "include": "#primitiveFunctions"
                }
              ]
            },
            "2": {
              "name": "meta.brace.round.typst"
            }
          },
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.typst"
            }
          },
          "patterns": [
            {
              "include": "#patternOrArgsBody"
            }
          ]
        },
        {
          "begin": "\\(",
          "end": "\\)|(?=[;\\}\\]])",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.round.typst"
            }
          },
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.typst"
            }
          },
          "patterns": [
            {
              "include": "#patternOrArgsBody"
            }
          ]
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "letInitClause": {
      "begin": "=\\s*",
      "end": "(?=[\\n;\\}\\]\\)])",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator.assignment.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "ifStatement": {
      "name": "meta.expr.if.typst",
      "begin": "(?=(?:(else\\s+)?(if\\b(?!-))))",
      "end": "(?<=\\}|\\])(?!\\s*(else)\\b(?!-)|[\\[\\{])|(?<=else)(?!\\s*(?:if\\b(?!-)|[\\[\\{]))|(?=[$;\\}\\]\\)\\n]|$)",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#ifClause"
        },
        {
          "include": "#elseClause"
        },
        {
          "include": "#codeBlock"
        },
        {
          "include": "#contentBlock"
        }
      ]
    },
    "ifClause": {
      "begin": "\\bif\\b(?!-)",
      "end": "(?<!(?:while|and|not|if|or|in|!=|==|<=|>=|<|>|\\+|-|\\*|\\/|=>|=|\\+=|-=|\\*=|\\/=)\\s*)(?=[\\[\\{\\n])|(?=[$;,\\}\\]\\)\\#\\n]|$)",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.conditional.typst"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "elseClause": {
      "match": "\\belse\\b(?!-)",
      "name": "keyword.control.conditional.typst"
    },
    "forStatement": {
      "name": "meta.expr.for.typst",
      "begin": "(?=(?:(for\\b(?!-))\\s*))",
      "end": "(?<=[\\}\\]])(?![\\{\\[])|(?=[$;\\}\\]\\)\\n]|$)",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#forClause"
        },
        {
          "include": "#codeBlock"
        },
        {
          "include": "#contentBlock"
        }
      ]
    },
    "forClause": {
      "begin": "(for\\b)\\s*",
      "end": "(?<!(?:while|and|not|if|or|in|!=|==|<=|>=|<|>|\\+|-|\\*|\\/|=>|=|\\+=|-=|\\*=|\\/=)\\s*)(?=[\\[\\{\\n])|(?=[$;,\\}\\]\\)\\#\\n]|$)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.loop.typst"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "whileStatement": {
      "name": "meta.expr.while.typst",
      "begin": "(?=(?:(while\\b(?!-))))",
      "end": "(?<=[\\}\\]])(?![\\{\\[])|(?=[$;\\}\\]\\)\\n]|$)",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#whileClause"
        },
        {
          "include": "#codeBlock"
        },
        {
          "include": "#contentBlock"
        }
      ]
    },
    "whileClause": {
      "begin": "(while\\b)\\s*",
      "end": "(?<!(?:while|and|not|if|or|in|!=|==|<=|>=|<|>|\\+|-|\\*|\\/|=>|=|\\+=|-=|\\*=|\\/=)\\s*)(?=[\\[\\{\\n])|(?=[$;,\\}\\]\\)\\#\\n]|$)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.loop.typst"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "setStatement": {
      "name": "meta.expr.set.typst",
      "begin": "(?=(?:(set\\b(?!-))\\s*(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*))",
      "end": "(?<=\\))(?!\\s*if\\b)|(?=[$\\s;\\{\\[\\}\\]\\)])",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#setClause"
        },
        {
          "include": "#setIfClause"
        }
      ]
    },
    "setClause": {
      "begin": "(set\\b)\\s+",
      "end": "(?=if)|(?=[$\\n;\\{\\[\\}\\]\\)])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.other.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#strictFuncCallOrPropAccess"
        },
        {
          "include": "#identifier"
        }
      ]
    },
    "setIfClause": {
      "begin": "(if\\b(?!-))\\s*",
      "end": "(?<=\\S)(?<!and|or|not|in|!=|==|<=|>=|<|>|\\+|-|\\*|\\/|=|\\+=|-=|\\*=|\\/=)(?!\\s*(?:and|or|not|in|!=|==|<=|>=|<|>|\\+|-|\\*|\\/|=|\\+=|-=|\\*=|\\/=|\\.))|(?=[\\n;\\}\\]\\)])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.conditional.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "showStatement": {
      "name": "meta.expr.show.typst",
      "begin": "(?=(?:(show\\b(?!-))))",
      "end": "(?=[\\$\\s;\\{\\[\\}\\]\\)])",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#showAnyClause"
        },
        {
          "include": "#showSelectClause"
        },
        {
          "include": "#showSubstClause"
        }
      ]
    },
    "showAnyClause": {
      "match": "(show\\b)\\s*(?=\\:)",
      "captures": {
        "1": {
          "name": "keyword.control.other.typst"
        }
      }
    },
    "showSelectClause": {
      "begin": "(show\\b)\\s*",
      "end": "(?=[$:;\\}\\]\\n])",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.other.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#markupLabel"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "showSubstClause": {
      "begin": "(\\:)\\s*",
      "end": "(?=[\\n;\\}\\]\\)])",
      "beginCaptures": {
        "1": {
          "name": "punctuation.separator.colon.typst"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "callArgs": {
      "begin": "\\(",
      "end": "\\)|(?=[;\\}\\]])",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.typst"
        }
      },
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.typst"
        }
      },
      "patterns": [
        {
          "include": "#patternOrArgsBody"
        }
      ]
    },
    "patternOrArgsBody": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#paramOrArgName"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "strictFuncCallOrPropAccess": {
      "name": "meta.expr.call.typst",
      "begin": "(?=(?:(\\.)?(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=\\(|\\[)))",
      "end": "(?:(?<=\\)|\\])(?![\\[\\(\\.]))|(?=[\\$\\s;,\\}\\]\\)\\#]|$)",
      "patterns": [
        {
          "match": "\\.",
          "name": "keyword.operator.accessor.typst"
        },
        {
          "match": "(?<!\\)|\\]|\\})\\b[\\p{XID_Start}_][\\p{XID_Continue}_\\-]*(?=\\(|\\[)",
          "captures": {
            "0": {
              "patterns": [
                {
                  "include": "#primitiveFunctions"
                },
                {
                  "include": "#primitiveTypes"
                },
                {
                  "match": ".*",
                  "name": "entity.name.function.typst"
                }
              ]
            }
          }
        },
        {
          "include": "#identifier"
        },
        {
          "match": "(\\()\\s*(\\))",
          "captures": {
            "1": {
              "name": "meta.brace.round.typst"
            },
            "2": {
              "name": "meta.brace.round.typst"
            }
          }
        },
        {
          "include": "#callArgs"
        },
        {
          "include": "#contentBlock"
        }
      ]
    }
  }
}
